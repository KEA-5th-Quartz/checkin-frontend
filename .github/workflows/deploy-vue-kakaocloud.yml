name: Vue.js Deploy Pipeline

on:
  push:
    branches:
      main
jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # 1. 소스 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. 환경 변수 설정
      - name: Create .env file
        run: |
          echo "VUE_APP_BASE_URL=${{ secrets.VUE_APP_API_URL }}" > .env

      # 3. Docker 로그인
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # 4. Docker 이미지 빌드
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.FRONTEND_IMAGE_NAME }}:latest .

      # 5. Docker 이미지 푸시
      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.FRONTEND_IMAGE_NAME }}:latest
          

      # 6. VM에 SSH로 접속하여 이미지 다운로드 및 컨테이너 실행
      - name: Deploy on VM
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.KAKAO_VM_IP }}
          username: ${{ secrets.KAKAO_VM_USERNAME }}
          key: ${{ secrets.KAKAO_VM_PRIVATE_KEY }}
          script: |
            docker network create checkin-network || true
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.FRONTEND_IMAGE_NAME }}:latest
            docker stop ${{ secrets.FRONTEND_IMAGE_NAME }} || true
            docker rm ${{ secrets.FRONTEND_IMAGE_NAME }} || true
            docker image prune -f
            docker run -d \
              --name ${{ secrets.FRONTEND_IMAGE_NAME }} \
              --network checkin-network \
              -p 80:80 \
              ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.FRONTEND_IMAGE_NAME }}:latest
